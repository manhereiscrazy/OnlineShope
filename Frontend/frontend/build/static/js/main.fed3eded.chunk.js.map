{"version":3,"sources":["Components/Products/Product.js","Components/Sources.js","Components/AppBar.js","Components/Products/Products.js","App.js","index.js"],"names":["Product","product","update","setUpdate","setBusy","getCookie","useState","drawer","setDrawer","instance","a","axios","put","id","headers","then","response","catch","error","console","log","data","post","Card","raised","CardMedia","component","height","image","image_uri","alt","name","CardContent","Typography","variant","style","float","price","color","description","CardActions","className","ButtonGroup","Button","onClick","size","title","text","action","handleProductDelete","actionText","Dialog","open","Boolean","onClose","maxWidth","fullWidth","DialogTitle","DialogContent","Grid","container","spacing","padding","item","xs","md","TextField","label","required","defaultValue","placeholder","type","onChange","e","target","value","autoComplete","DialogActions","handleProductEdit","AppDrawer","errors","setErrors","setProduct","preventDefault","href","helperText","disabled","useStyles","makeStyles","items","cookieValue","document","cookie","cookies","split","i","length","jQuery","trim","substring","decodeURIComponent","Products","busy","classes","SetProducts","useEffect","fontSize","get","map","index","minHeight","sm","lg","reactionText","App","path","exact","render","to","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.fed3eded.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios';\nimport URIs from '../Sources';\n\nimport { CardContent, CardActions, Card, TextField, Button, ButtonGroup, Grid, CardMedia, Typography, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\n\n\n\nexport default function Product({ product, update, setUpdate, setBusy, getCookie }) {\n    const [drawer, setDrawer] = useState(false)\n\n    async function handleProductEdit(instance) {\n        // console.log(drawer)\n        await axios.put(`${URIs().ProductEditURI}${instance.id}`, drawer,\n            {\n                headers: {\n                    'Content-type': 'application/json',\n                    \"X-CSRFToken\": getCookie('csrftoken')\n                }\n            }).then((response) => {\n                // console.log(response.data)\n                setUpdate(!update)\n                setDrawer(false)\n            }).catch((error) => {\n                console.log(\"###error\", error, error?.response?.data)\n            })\n    }\n\n    async function handleProductDelete(instance) {\n        await axios.post(`${URIs().ProductEditURI}${instance.id}`,\n            {\n                headers: {\n                    'Content-type': 'application/json',\n                    \"X-CSRFToken\": getCookie('csrftoken')\n                }\n            }).then((response) => {\n                // console.log(response.data)\n                setUpdate(!update)\n            }).catch((error) => {\n                console.log(\"###error\", error, error?.response?.data)\n            })\n    }\n\n\n    return (\n        <>\n            <Card raised>\n                <CardMedia\n                    component=\"img\"\n                    height=\"230\"\n                    image={product.image_uri}\n                    alt={product.name}\n                />\n                <CardContent>\n                    <Typography variant=\"h5\" component=\"div\">\n                        {product.name}\n                        <span style={{ float: \"right\" }} variant=\"h5\" component=\"div\">\n                            ${product.price}/-\n                        </span>\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"inherit\">\n                        {product.description}\n                    </Typography>\n                </CardContent>\n                <CardActions className=\"cardActionBtns\" style={{float:\"right\"}}>\n                    <ButtonGroup>\n                        <Button onClick={() => setDrawer(product)} variant=\"contained\" color=\"primary\" size=\"small\">Edit</Button>\n                        <Button onClick={() => setBusy({ title: \"Warning\", text: \"Are you sure want to delete the item?\", action: () => handleProductDelete(product), actionText: \"Yes\" })} variant=\"contained\" color=\"secondary\" size=\"small\">Delete</Button>\n                    </ButtonGroup>\n                </CardActions>\n            </Card>\n\n            {drawer && <Dialog\n                    open={Boolean(drawer)}\n                    onClose={() => setDrawer(false)}\n                    maxWidth=\"sm\"\n                    fullWidth\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">\n                        Add Product\n                    </DialogTitle>\n                    <DialogContent>\n                        <Grid container spacing={2} style={{ padding: \"10px\" }}>\n                            <Grid item xs={12} md={6}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    id=\"productName\"\n                                    color=\"primary\"\n                                    label=\"Name\"\n                                    required\n                                    defaultValue={drawer.name}\n                                    placeholder=\"Enter product Name\"\n                                    name=\"productName\"\n                                    type=\"text\"\n                                    onChange={(e) => setDrawer({ ...product, name: e.target.value })}\n                                    autoComplete=\"productName\"\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    placeholder=\"Enter product Description\"\n                                    id=\"productDescription\"\n                                    color=\"primary\"\n                                    label=\"Description\"\n                                    name=\"productDescription\"\n                                    defaultValue={drawer?.description}\n                                    type=\"text\"\n                                    onChange={(e) => setDrawer({ ...product, description: e.target.value })}\n                                    autoComplete=\"productName\"\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    id=\"productPrice\"\n                                    color=\"primary\"\n                                    label=\"Price\"\n                                    required\n                                    defaultValue={drawer?.price}\n                                    placeholder=\"Enter product Price\"\n                                    name=\"productPrice\"\n                                    type=\"number\"\n                                    onChange={(e) => setDrawer({ ...product, price: e.target.value })}\n                                    autoComplete=\"productPrice\"\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    id=\"productImageUrl\"\n                                    color=\"primary\"\n                                    label=\"Image URL\"\n                                    required\n                                    defaultValue={drawer?.image_uri}\n                                    placeholder=\"Enter product image url\"\n                                    name=\"productPrice\"\n                                    type=\"text\"\n                                    onChange={(e) => setDrawer({ ...product, image_uri: e.target.value })}\n                                    autoComplete=\"url\"\n                                />\n                            </Grid>\n                        </Grid>\n                    </DialogContent>\n                    <DialogActions>\n                        <ButtonGroup>\n                            <Button color=\"primary\" variant=\"contained\" size=\"small\" onClick={() => setDrawer(false)}>\n                                Close\n                            </Button>\n                            <Button variant=\"contained\" size=\"small\" fullWidth color=\"secondary\" onClick={()=>handleProductEdit(drawer)}>\n                                Save\n                            </Button>\n                        </ButtonGroup>\n                    </DialogActions>\n                </Dialog>\n            }\n        </>\n    )\n}","// const mode = 'DEVELOPMENT'\nconst mode = 'PRODUCTION'\n\nexport default function URIs() {\n    if (mode === 'DEVELOPMENT') return (\n        {\n            ProductsURI: \"http://192.168.43.114:1234/api/products/\",\n            ProductEditURI: \"http://192.168.43.114:1234/api/product/\",\n        }\n    )\n    if (mode === 'PRODUCTION') return (\n        {\n            ProductsURI: \"/api/products/\",\n            ProductEditURI: \"/api/product/\",\n        }\n    )\n\n}\n\n\n//< V1.28OCT20211200\n//> V1.28OCT20212120","import React, { useState } from 'react'\nimport axios from 'axios';\nimport URIs from './Sources';\n\nimport { Grid, TextField, Button, ButtonGroup, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\n\nexport default function AppDrawer({ update, setUpdate, getCookie }) {\n    const [drawer, setDrawer] = useState(false)\n    const [errors, setErrors] = useState(false)\n    const [product, setProduct] = useState({\n        name: \"\",\n        description: \"\",\n        price: \"\",\n        image_uri: \"\",\n    })\n\n\n\n    async function HandleProductAdd(e) {\n        e.preventDefault()\n        console.log(product)\n        if (!product?.name) {\n            setErrors({ ...errors, name: \"Enter a product name\" })\n            return\n        }\n        if (!product?.price) {\n            setErrors({ ...errors, price: \"Enter a price of the product\" })\n            return\n        }\n        if (!product?.image_uri) {\n            setErrors({ ...errors, image_uri: \"Please give a product image url\" })\n            return\n        }\n        await axios.post(`${URIs().ProductsURI}`, product,\n            {\n                headers: {\n                    'Content-type': 'application/json',\n                    \"X-CSRFToken\": getCookie('csrftoken')\n                }\n            }).then((response) => {\n                setDrawer(false)\n                setUpdate(!update)\n                console.log(response.data)\n            }).catch((error) => {\n                console.log(\"###error\", error, error?.response?.data)\n                if (error?.response?.data?.name) setErrors({ ...errors, name: error?.response?.data?.name[0] })\n            })\n        console.log(e)\n    }\n\n    return (\n        <>\n            <div className=\"appbarcontainer\">\n                <div className=\"appbarLogo\">Shope</div>\n                <div className=\"appbaractions\">\n                    <ul>\n                        <li className=\"appbarnav\">\n                            <a href=\"/\" >Home</a>\n                        </li>\n                        <li className=\"appbarnav\">\n                            <a href=\"/\" >About</a>\n                        </li>\n                        <li className=\"appbarnav\">\n                            <a onClick={() => setDrawer(true)} >Add Product</a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            {drawer && <Dialog\n                open={drawer}\n                onClose={() => setDrawer(false)}\n                maxWidth=\"sm\"\n                fullWidth\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                    Add Product\n                </DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2} style={{ padding: \"10px\" }}>\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                variant=\"outlined\"\n                                fullWidth\n                                id=\"productName\"\n                                color=\"primary\"\n                                label=\"Name\"\n                                error={Boolean(errors?.name)}\n                                required\n                                helperText={errors?.name ? errors?.name : false}\n                                placeholder=\"Enter product Name\"\n                                name=\"productName\"\n                                type=\"text\"\n                                onChange={(e) => { setProduct({ ...product, name: e.target.value }); setErrors(false) }}\n                                autoComplete=\"productName\"\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                variant=\"outlined\"\n                                fullWidth\n                                placeholder=\"Enter product Description\"\n                                id=\"productDescription\"\n                                color=\"primary\"\n                                label=\"Description\"\n                                name=\"productDescription\"\n                                type=\"text\"\n                                onChange={(e) => setProduct({ ...product, description: e.target.value })}\n                                autoComplete=\"productName\"\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                variant=\"outlined\"\n                                fullWidth\n                                id=\"productPrice\"\n                                color=\"primary\"\n                                label=\"Price\"\n                                required\n                                placeholder=\"Enter product Price\"\n                                error={Boolean(errors?.price)}\n                                helperText={errors?.price && errors?.price}\n                                name=\"productPrice\"\n                                type=\"number\"\n                                onChange={(e) => { setProduct({ ...product, price: e.target.value }); setErrors(false) }}\n                                autoComplete=\"productPrice\"\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                variant=\"outlined\"\n                                fullWidth\n                                id=\"productImageUrl\"\n                                color=\"primary\"\n                                label=\"Image URL\"\n                                required\n                                error={Boolean(errors?.image_uri)}\n                                helperText={errors?.image_uri && errors?.image_uri}\n                                placeholder=\"Enter product image url\"\n                                name=\"productPrice\"\n                                type=\"text\"\n                                onChange={(e) => { setProduct({ ...product, image_uri: e.target.value }); setErrors(false) }}\n                                autoComplete=\"url\"\n                            />\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <ButtonGroup>\n                        <Button color=\"primary\" variant=\"contained\" size=\"small\" onClick={() => setDrawer(false)}>\n                            Close\n                        </Button>\n                        <Button disabled={Boolean(errors)} variant=\"contained\" size=\"small\" fullWidth color=\"secondary\" onClick={HandleProductAdd}>\n                            Save\n                        </Button>\n                    </ButtonGroup>\n                </DialogActions>\n            </Dialog>\n            }\n        </>\n    )\n}\n","import React, { useEffect, useState } from 'react'\n\nimport Product from './Product';\nimport URIs from '../Sources';\nimport AppDrawer from '../AppBar';\nimport axios from 'axios';\nimport jQuery from 'jquery';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Button, ButtonGroup, Grid, Typography, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\n\n\n\nconst useStyles = makeStyles({\n    items: {\n        padding: \"10px\"\n    }\n});\n\n\nfunction getCookie(name) {\n    var cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        var cookies = document.cookie.split(';');\n        for (var i = 0; i < cookies.length; i++) {\n            var cookie = jQuery.trim(cookies[i]);\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n  }\n\n\n\nexport default function Products() {\n    const [busy, setBusy] = useState(true)\n    const classes = useStyles();\n    const [Products, SetProducts] = useState()\n    const [update, setUpdate] = useState(true)\n\n    useEffect(() => {\n        setBusy({ text: <span style={{ fontSize: \"1.7rem\" }}>Please wait...</span> })\n        return axios.get(`${URIs().ProductsURI}`, {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }).then((response) => {\n            // console.log(response.data)\n            SetProducts(response.data)\n            setBusy(false)\n        }).catch((error) => {\n            setBusy(false)\n            console.log(\"###error\", error, error?.response?.data)\n        })\n    }, [update])\n\n    return (\n        <>\n            <AppDrawer update={update} setUpdate={setUpdate} setBusy={setBusy}  getCookie={getCookie}/>\n            <div className=\"mainCtx\">\n                <Grid container>\n                    {Products?.map((product, index) =>\n                        <Grid className={classes.items} style={{ minHeight: \"300px !important\" }} item key={index} xs={12} sm={6} md={4} lg={3}>\n                            <Product update={update} setUpdate={setUpdate} product={product} setBusy={setBusy} getCookie={getCookie}/>\n                        </Grid>\n                    )}\n                </Grid>\n            </div>\n            {busy && <Dialog\n                open={Boolean(busy)}\n                onClose={() => setBusy(false)}\n                maxWidth=\"sm\"\n                fullWidth\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                    {busy?.title}\n                </DialogTitle>\n                <DialogContent>\n                    <Typography variant=\"h6\" color=\"inherit\">\n                        {busy?.text}\n                    </Typography>\n                </DialogContent>\n                <DialogActions>\n                    <ButtonGroup>\n                        <Button color=\"primary\" variant=\"contained\" size=\"small\" onClick={() => setBusy(false)}>\n                            {busy?.reactionText ? busy?.reactionText : \"Close\"}\n                        </Button>\n                        {busy?.actionText && <Button onClick={() => { setBusy(false); busy?.action() }} variant=\"contained\" size=\"small\" fullWidth color=\"secondary\">\n                            {busy?.actionText ? busy?.actionText : \"Continue\"}\n                        </Button>}\n                    </ButtonGroup>\n                </DialogActions>\n            </Dialog>}\n        </>\n    )\n}\n","import { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport Products from './Components/Products/Products';\n\nexport default function App() {\n\n  return (\n    <Router>\n          <div className=\"main\">\n            <Switch>\n              <Route path=\"/\" exact component={Products}/>\n              <Route render={() => <Redirect to=\"/\" />} />\n            </Switch>\n          </div>\n    </Router>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles.css'\nReactDOM.render(<App />, document.getElementById('clk_acs'));"],"sourceRoot":""}